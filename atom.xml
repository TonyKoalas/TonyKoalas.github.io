<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tony威</title>
  
  <subtitle>会做饭的程序员</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-05-18T16:25:55.212Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>tony</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Go-切片</title>
    <link href="http://example.com/2021/05/18/01%E5%88%87%E7%89%87/"/>
    <id>http://example.com/2021/05/18/01%E5%88%87%E7%89%87/</id>
    <published>2021-05-18T12:33:36.000Z</published>
    <updated>2021-05-18T16:25:55.212Z</updated>
    
    <content type="html"><![CDATA[<h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><ol><li><ul><li>切片不保存具体的值，</li><li>切片对应一个底层数组</li><li>底层数组占用一块连续的内存</li></ul></li><li>切片的容量是指底层数组的第一个元素到最后一个元素的数量</li><li>切片是引用类型，指向了底层的一个数组</li><li>切片的本质：就是一个框，框住了一块连续的内存，属于引用类型</li><li>相关函数<ul><li>切片初始化<figure class="highlight ini"><table><tr><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">s1</span> = []int&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;<br></code></pre></td></tr></table></figure></li><li>由数组得到切片<figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go">   a1 := [...]<span class="hljs-keyword">int</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;<br>s3 := a1[<span class="hljs-number">0</span>:<span class="hljs-number">4</span>] <span class="hljs-comment">//切割0-4，左包含右不包含</span><br></code></pre></td></tr></table></figure></li><li>make<figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go"><span class="hljs-comment">//创建一个长度为5，容量为10的切片</span><br><span class="hljs-comment">//int默认为0，string默认为“”</span><br>s1 := <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">int</span>,<span class="hljs-number">5</span>,<span class="hljs-number">10</span>)<br></code></pre></td></tr></table></figure></li><li>append<figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go">   s1 := []<span class="hljs-keyword">string</span>&#123;<span class="hljs-string">&quot;北京&quot;</span>,<span class="hljs-string">&quot;上海&quot;</span>,<span class="hljs-string">&quot;深圳&quot;</span>&#125;<br>   <span class="hljs-comment">//如果超出切片的容量，数组扩容为原来的两倍</span><br>s2 := <span class="hljs-built_in">append</span>(s1, <span class="hljs-string">&quot;成都&quot;</span>)<br><span class="hljs-comment">//如果超出切片的容量，扩容一倍也不够，数组直接扩容到最终的大小</span><br>s3 := <span class="hljs-built_in">append</span>(s1, <span class="hljs-string">&quot;成都&quot;</span>,<span class="hljs-string">&quot;北京1&quot;</span>,<span class="hljs-string">&quot;上海1&quot;</span>,<span class="hljs-string">&quot;深圳1&quot;</span>)<br></code></pre></td></tr></table></figure></li><li>copy<figure class="highlight go"><table><tr><td class="code"><pre><code class="hljs go">   a1 := []<span class="hljs-keyword">int</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">5</span>&#125;<br>   <span class="hljs-comment">//创建新切片，底层新数组</span><br>a3 := <span class="hljs-built_in">make</span>([]<span class="hljs-keyword">int</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<br><span class="hljs-comment">//a1,a3对应2个数组，通过copy只是复制了值，不会改变底层数组的内存地址</span><br><span class="hljs-built_in">copy</span>(a3, a1)<br></code></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;切片&quot;&gt;&lt;a href=&quot;#切片&quot; class=&quot;headerlink&quot; title=&quot;切片&quot;&gt;&lt;/a&gt;切片&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;切片不保存具体的值，&lt;/li&gt;
&lt;li&gt;切片对应一个底层数组&lt;/li&gt;
&lt;li&gt;底层数组占用一块连续的内存&lt;/</summary>
      
    
    
    
    <category term="Go基础" scheme="http://example.com/categories/Go%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="Go" scheme="http://example.com/tags/Go/"/>
    
    <category term="切片" scheme="http://example.com/tags/%E5%88%87%E7%89%87/"/>
    
  </entry>
  
</feed>
